// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/openshift/machine-config-operator/pkg/apis/machineconfiguration.openshift.io/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MachineConfigLister helps list MachineConfigs.
type MachineConfigLister interface {
	// List lists all MachineConfigs in the indexer.
	List(selector labels.Selector) (ret []*v1.MachineConfig, err error)
	// MachineConfigs returns an object that can list and get MachineConfigs.
	MachineConfigs(namespace string) MachineConfigNamespaceLister
	MachineConfigListerExpansion
}

// machineConfigLister implements the MachineConfigLister interface.
type machineConfigLister struct {
	indexer cache.Indexer
}

// NewMachineConfigLister returns a new MachineConfigLister.
func NewMachineConfigLister(indexer cache.Indexer) MachineConfigLister {
	return &machineConfigLister{indexer: indexer}
}

// List lists all MachineConfigs in the indexer.
func (s *machineConfigLister) List(selector labels.Selector) (ret []*v1.MachineConfig, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.MachineConfig))
	})
	return ret, err
}

// MachineConfigs returns an object that can list and get MachineConfigs.
func (s *machineConfigLister) MachineConfigs(namespace string) MachineConfigNamespaceLister {
	return machineConfigNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MachineConfigNamespaceLister helps list and get MachineConfigs.
type MachineConfigNamespaceLister interface {
	// List lists all MachineConfigs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.MachineConfig, err error)
	// Get retrieves the MachineConfig from the indexer for a given namespace and name.
	Get(name string) (*v1.MachineConfig, error)
	MachineConfigNamespaceListerExpansion
}

// machineConfigNamespaceLister implements the MachineConfigNamespaceLister
// interface.
type machineConfigNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MachineConfigs in the indexer for a given namespace.
func (s machineConfigNamespaceLister) List(selector labels.Selector) (ret []*v1.MachineConfig, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.MachineConfig))
	})
	return ret, err
}

// Get retrieves the MachineConfig from the indexer for a given namespace and name.
func (s machineConfigNamespaceLister) Get(name string) (*v1.MachineConfig, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("machineconfig"), name)
	}
	return obj.(*v1.MachineConfig), nil
}
